include: "../config.py"

conda:  "../graph_conda.yaml"


rule all:
    input:
        OUTDIR+"/simplified_%d.asqg" % (OVERLAP),
        OUTDIR+"/simplified_%d_counts.tsv" % (OVERLAP)



rule simplify:
    input:
        graph = OUTDIR+"/sga/merged.rmdup_%d.asqg" % (OVERLAP),
        c = OUTDIR+"/sga/merged.rmdup_%d_counts.tsv" % (OVERLAP),
    output:
        graph = OUTDIR+"/simplified_%d.asqg" % (OVERLAP),
        c = OUTDIR+"/simplified_%d_counts.tsv" % (OVERLAP),
    log:
        OUTDIR+"/simplify_logging.txt"
    shell:
        "python clean_graph.py {input.graph} {input.c} {output.graph} {output.c} " + 
        "-v -r {DEADENDS_REMOVE_ROUNDS} -d {DEADENDS_MIN_LENGTH} -m {MIN_LENGTH} >> {log}"




rule longest:
    input:
        graph = OUTDIR+"/simplified_%d.asqg" % (OVERLAP),
        c = OUTDIR+"/simplified_%d_counts.tsv" % (OVERLAP)
    output:
          OUTDIR+"/longest.fa"  
    shell:
        "run_heuristics.py  {input.graph} -c {input.c} -o {output} -t longest"

# rule longestfc:
#     input:
#         graph = OUTDIR+"/simplified_%d.asqg" % (OVERLAP),
#         c = OUTDIR+"/simplified_%d_counts.tsv" % (OVERLAP)

# rule bestfc:
#     input:
#         graph = OUTDIR+"/simplified_%d.asqg" % (OVERLAP),
#         c = OUTDIR+"/simplified_%d_counts.tsv" % (OVERLAP)